C# CURSO UDEMY

----------INSTALAÇÕES----------
Visual Studio Comunitty



----------SOBRE A LINGUAGEM----------
LINGUAGEM PRÉ-COMPILADA
CÓDIGO -> PRÉ COMPILAÇÃO NO CIL (COMMON INTERMEDIATE LANGUAGE) -> COMPILAÇÃO JIT(JUST IN TIME) NA CLR (COOMON LANGUAGE RUNTIME) .NET (MÁQUINA VIRTUAL) -> CÓDIGO DE MÁQUINA



CLASSES FORMAM NAMESPACES (AGRUPAMENTO LÓGICO) 
        |
        V
        ASSEMBLYs (AGRUPAMENTO FÍSICO - DLL ou EXE - BUILD - SUBPROJETO) -> APLICAÇÃO



----------MACETES----------
IDENTAÇÃO AUTOMÁTICA - CTRL + K + D
CW+TAB TAB - ESCREVE Console.WriteLine()
SABER O VALOR MÍNIMO OU MÁXIMO DE UM TIPO DE VARIÁVEL NUMÉRICA
int.MinValue;
int.MaxValue;



----------TIPOS DE VARIÁVEIS----------

TIPOS DE VARIÁVEIS - MAIS COMUNS
C#          .Net FrameworkType    Signed   Bytes(tamanho)    Faixa de valor
____________________________________________________________________________
INTEIRO
_______
int         System.Int32          YES      4                 -2.147.438.648 a 2.147.438.647
long        System.Int64          YES      8                 -9.223.372.036.854.775.808 a 9.223.372.036.854.775.807
sbyte       System.SByte          YES      1                 -128 a 127
byte        System.Byte           NO       1                 0 a 255

FLOAT
______
float       System.Single         YES      4                 1.175494351 E - 38 a 3,402823466 E + 38
double      System.Double         YES      8                 2.2250738585072014 E - 308 a 1,7976931348623158 E + 308
decimal     System.Decimal        YES      12                ±1,0 x 10-28 a ±7,9228 x 1028

STRING
______
char        System.Char           -        2     

BOOL
_____
bool        System.Boolean        -        true or false



STRING
CADEIA DE CARACTÉRES IMUTÁVEL - ASPAS DUPLAS
string nome = "Luciano";


CHAR
REPRESENTA UM ÚNICO CARACTERE - USAR ASPAS SIMPLES
char letra = 'A';

PARA ATRIBUIR VALORES, USAR O CARACTERE DIRETO OU SEU CÓDIGO UNICODE EM https://symbl.cc/pt/unicode-table/
char letra = 'A'
char letra = '\u0041'


OBJECT
TODA VARIÁVEL HERDA DE OBJECT
object nome = "luciano";
object valor = 15;
object numero = 'a';
object x = 40.25f



OVERFLOW DE VARIÁVEL
SEMPRE QUE É ATRIBUÍDO A UMA VARIÁVEL UM VALOR QUE FOGE DO SEU INTERVALO, ELA ASSUME O VALOR OPOSTO. POR EXEMPLO, VARIÁVEIS DO TIPO sbyte ASSUMEM VALORES DE -128 A 127. SE FOR ATRIBUÍDO sbtye x = 128; x vai assumir valor -128.




RECOMENDAÇÕES
long x = 2465795L  (LETRA l AO FINAL DO NÚMERO)
float x = 4.5f (LETRA f AO FINAL DO NÚMERO)
NOMES DE VARIÁVEIS COM CamelCase (lastName)
NOMES DE NAMESPACES, CLASSES, PROPERTIES E MÉTODOS - PascalCase (LastName)
NOMES DE ATRIBUTOS INTERNOS DA CLASSE - _lastName



RESTRIÇÕES DE NOMES DE VARIÁVEL
-NÃO PODE COMEÇAR COM DÍGITO;
-NÃO USAR ACENTO;
-NÃO USAR ESPAÇO EM BRANCO;



----------SAÍDA DE DADOS----------
Console.WriteLine(valor); //MOSTRA NA TELA E QUEBRA A LINHA
Console.Write(valor);//MOSTRA NA TELA SEM QUEBRAR A LINHA - TUDO JUNTO

MOSTRAR UM NÚMERO ESPECÍFICO DE CASAS DECIMAIS DO NÚMERO
double saldo = 50.2589;
Console.WriteLine(saldo.ToString("F2")); //DUAS CASAS DECIMAIS - JÁ ARREDONDADO - 0 A 4 ->0 / 5 A 9 -> 10

TROCAR PONTO POR VÍRGULA
using System.Globalization; //CultureInfo.InvariantCulture
Console.WriteLine(saldo.ToString("F2", CultureInfo.InvariantCulture));//USAR . AO INVÉS DE ,

DIVERSAS VARIÁVEIS NA MESMA SAÍDA
string nome = "Luciano";
double saldo = 50.2589;
int idade = 28;

INTERPOLAÇÃO
Console.WriteLine($"{nome} tem {idade} anos e R${saldo.ToString("f2")} reais na conta!");

PLACEHOLDER
Console.WriteLine("{0} tem {1} anos e R${2:F2} na conta!", nome, idade, saldo);

CONCATENAÇÃO
Console.WriteLine(nome +" tem "+idade+" anos e R$"+saldo.ToString("f2")+" na conta!");



-----ATRIBUIÇÃO-----
= -> RECEBE
a += 2 -> a RECEBE a + 2 (TAMBÉM FUNCIONA COM STRING)
a -= 2 -> ...
a *= 2 -> ...
a /= 2 -> ...
a %= 2 -> a = a%2
a++ -> a=a+1
a-- -> a=a-1

DIFERENÇA ++a E a++
a=10;
b=a++; (B VALE 10 E A VALE 11)

a=10;
b=++a; (B VALE 11 E A VALE 11)

OU SEJA, x=++A - INCREMENTA O a E DEPOIS ATRIBUI SEU VALOR PARA x
         x=a++ - ATIBUI a SEM INCREMENTO A x E DEPOIS INCREMENTA A


-----CONVERSÃO DE TIPOS-----
IMPLÍCITA - ATRIBUIR A UMA VARIÁVEL O VALOR DE OUTRA QUE "CABE" DENTRO DELA
float a = 5.2f;
double b = a; //CONVERSÃO IMPLÍCITA

EXPLÍCITA / CASTING - FORÇAR A CONVERSÃO DO VALOR DE UMA VARIÁVEL PARA OUTRO TIPO, ASSUMINDO O RISCO DA PERDA DE DADOS
double a = 5.2;
float b = (float)a;

CASTING EM OPERAÇÕES
int a = 5;
int b = 2;
double resultado = a / b; //RESULTADO É UM INTEIRO PORQUE O COMPILADOR ENTENDE SOMENTE AS PARTES INTEIRAS DE VARIÁVEIS INTEIRAS PROCESSADAS
double resultado1 = (double) a / b;


-----OPERADORES ARITMÉTICOS-----
+ SOMA
- SUBTRAÇÃO
* MULTIPLICAÇÃO
/ DIVISÃO
% MOD
Math.Pow(x, y) - EXPONENCIAÇÃO -> x elevado a y
Math.Sqrt(x) RAIZ QUADRADA


PRECEDÊNCIA
* / % -> + -
() QUEBRA PRECEDÊNCIA



-----ENTRADA DE DADOS-----
Console.ReadLine(); 
LÊ ATÉ A QUEBRA DE LINHA - ENTER
ENTRADA DE DADOS SEMPRE COMO STRING

LER STRINGS DE UM VETOR
string frase = Console.ReadLine();//STRING RECEBE TODAS AS PALAVRAS
string[] vetor = frase.Split(' ');//CADA PALAVRA É SALVA NUMA POSIÇÃO DO VETOR
string p0 = vetor[0];
string p1 = vetor[1];  //CADA PALAVRA É ATRIBUÍDA A UMA NOVA VARIÁVEL
string p2 = vetor[2];

CONVERTER TIPOS NA ENTRADA
int n1 = int.Parse(Consolo.ReadLine());

variavel = tipo_variavel.Parse(Console.ReadLine());

CONVERSÃO DE DECIMAIS COM , OU .
SE A MÁQUINA ESTIVER EM PT-BR, PREENCHER AS VARIÁVEIS COM . DÁ ERRO
double numero = double.Parse(Console.ReadLine()); //ENTRADA 4.55
Console.WriteLine(numero);// SAÍDA 455

PARA QUE FUNCIONE USANDO .
Using System.Globalization
double numero = double.Parse(Console.ReadLine(), CultureInfo.InvariantCulture); //ENTRADA 4.55
Console.WriteLine(numero.ToString("f2",CultureInfo.InvariantCulture));// SAÍDA 4.55











